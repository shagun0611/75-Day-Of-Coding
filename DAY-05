##  Spiral Matrix

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        ArrayList<Integer> ans=new ArrayList<>();
        int top=0;
            int bottom=matrix.length-1;
            int left= 0;
            int right=matrix[0].length-1;
        while(true){
            for(int i=left;i<=right;i++) ans.add(matrix[top][i]);
            top++;
            if(top>bottom || left > right) break;
            for(int i=top;i<=bottom;i++) ans.add(matrix[i][right]);
            right--;
            if(top>bottom || left > right) break;
            for(int i=right;i>=left;i--) ans.add(matrix[bottom][i]);
            bottom--;
            if(top>bottom || left > right) break;
            for(int i=bottom;i>=top;i--) ans.add(matrix[i][left]);
            left++;
            if(top>bottom || left > right) break;
            
        }
        return ans;
    }
}

## Rotate Image

class Solution {
    public void rotate(int[][] matrix) {
        
        //transpose
        for(int i=0;i<matrix.length;i++){
            for(int j=0;j<i;j++){
                int temp=matrix[i][j];
                matrix[i][j]=matrix[j][i];
                matrix[j][i]=temp;
            }
        }
            for (int i = 0; i <matrix.length  ; i++) {
             int start = 0;
             int end = matrix.length - 1;
           while (start <= end) {
             int temp = matrix[i][start];
            matrix[i][start] = matrix[i][end];
            matrix[i][end] = temp;
            start++;
            end--;
        }
    }
    
    }
}

