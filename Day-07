##  Combination Sum

class Solution {
     List<List<Integer>> ans=new ArrayList <>();
    public List<List<Integer>> combinationSum(int[] candidates, int target){
        if(candidates.length==0)
            return ans;
        ArrayList<Integer> arr=new ArrayList<>();
        help(candidates,target,0,arr,0);
       return ans;
         }
    public void help(int[] candidates, int target, int currsum, ArrayList<Integer> arr , int index){
        if(index >= candidates.length || currsum > target)
            return ;
        if(currsum==target){
            ans.add(new ArrayList<>(arr));
            return;
        }
        for(int i=index;i<candidates.length;i++){
            arr.add(candidates[i]);
             help(candidates,target,currsum+candidates[i],arr,i);
            arr.remove(arr.size()-1);
        }
    }
}

##
